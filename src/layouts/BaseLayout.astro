---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '../styles/globals.css';
import '../styles/layout-stability.css';
import '../styles/product-enhancements.css';

export interface Props {
  title: string;
  description: string;
  image?: string;
  canonical?: string;
  type?: 'website' | 'article' | 'product';
  noindex?: boolean;
  structuredData?: any;
  ogTitle?: string;
  ogDescription?: string;
  ogImage?: string;
  twitterTitle?: string;
  twitterDescription?: string;
  bodyClass?: string;
}

const { 
  title, 
  description, 
  image = '/images/og-default.jpg',
  canonical,
  type = 'website',
  noindex = false,
  structuredData,
  ogTitle,
  ogDescription,
  ogImage: ogImageProp,
  twitterTitle,
  twitterDescription,
  bodyClass = ''
} = Astro.props;

const siteUrl = 'https://supplements-nbs.com';
const canonicalUrl = canonical || new URL(Astro.url.pathname, siteUrl).href;
const ogImage = new URL(ogImageProp || image, siteUrl).href;

// Enhanced meta values
const finalOgTitle = ogTitle || title;
const finalOgDescription = ogDescription || description;
const finalTwitterTitle = twitterTitle || finalOgTitle;
const finalTwitterDescription = twitterDescription || finalOgDescription;
---

<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.png" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalUrl} />
    
    <!-- SEO Meta Tags -->
    <title>{title}</title>
    <meta name="description" content={description} />
    {noindex && <meta name="robots" content="noindex, nofollow" />}
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={type} />
    <meta property="og:url" content={canonicalUrl} />
    <meta property="og:title" content={finalOgTitle} />
    <meta property="og:description" content={finalOgDescription} />
    <meta property="og:image" content={ogImage} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:image:alt" content={finalOgTitle} />
    <meta property="og:site_name" content="NBS Supplements" />
    <meta property="og:locale" content="en_US" />
    <meta property="article:author" content="NBS Supplements" />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:site" content="@nbssupplements" />
    <meta property="twitter:creator" content="@nbssupplements" />
    <meta property="twitter:url" content={canonicalUrl} />
    <meta property="twitter:title" content={finalTwitterTitle} />
    <meta property="twitter:description" content={finalTwitterDescription} />
    <meta property="twitter:image" content={ogImage} />
    <meta property="twitter:image:alt" content={finalTwitterTitle} />
    
    <!-- Additional Meta Tags -->
    <meta name="author" content="NBS Supplements" />
    <meta name="copyright" content="NBS Supplements" />
    <meta name="language" content="English" />
    <meta name="revisit-after" content="7 days" />
    
    <!-- Schema.org Structured Data -->
    {structuredData ? (
      <script type="application/ld+json" set:html={JSON.stringify(structuredData)} />
    ) : (
      <script type="application/ld+json">
        {
          "@context": "https://schema.org",
          "@type": "Organization",
          "name": "NBS Supplements",
          "alternateName": "No Bullsh*t Supplements",
          "url": "https://supplements-nbs.com",
          "logo": "https://supplements-nbs.com/images/logo.png",
          "description": "Clean, natural supplements formulated by pharmacists. Clinically dosed ingredients, third-party tested, and completely transparent.",
          "founder": {
            "@type": "Person",
            "name": "NBS Pharmacist Team"
          },
          "foundingDate": "2023",
          "address": {
            "@type": "PostalAddress",
            "addressRegion": "NJ",
            "addressCountry": "US"
          },
          "sameAs": [
            "https://www.instagram.com/nbssupplements/",
            "https://www.facebook.com/nbssupplements/"
          ]
        }
      </script>
    )}
    
    <!-- Theme Detection Script -->
    <script is:inline>
      // Theme detection and application
      function getThemePreference() {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
      }
      
      function setTheme(theme) {
        if (theme === 'light') {
          document.documentElement.classList.remove('dark');
        } else {
          document.documentElement.classList.add('dark');
        }
        localStorage.setItem('theme', theme);
      }
      
      // Apply theme immediately to prevent flash
      setTheme(getThemePreference());
      
      // Listen for theme changes
      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
        if (!localStorage.getItem('theme')) {
          setTheme(e.matches ? 'dark' : 'light');
        }
      });
    </script>
    
    <!-- Critical CSS for above-the-fold content with CLS prevention -->
    <style>
      /* Critical CSS for initial paint with exact fallback metrics */
      body { 
        font-family: 'Inter', 'Inter Fallback', system-ui, -apple-system, BlinkMacSystemFont, sans-serif; 
      }
      
      /* Layout stability for hero section */
      .hero-section { 
        min-height: 60vh; 
      }
      
      /* Color variables for immediate paint */
      .nbs-primary { color: hsl(203 89% 53%); }
      .nbs-trust { color: hsl(203 23% 30%); }
      .clinical-card { background: hsl(210 20% 98%); border-radius: 0.5rem; }
      
      /* Text size reservations to prevent CLS */
      .hero-title {
        font-size: 2.25rem; /* 36px fallback before responsive classes load */
        line-height: 2.5rem;
        font-weight: 700;
      }
      
      .hero-subtitle {
        font-size: 1.125rem; /* 18px fallback */
        line-height: 1.75rem;
        font-weight: 400;
        min-height: 6rem; /* Reserve space for 3-4 lines */
      }
      
      /* Trust badge containers with reserved space */
      .trust-badge-container {
        min-height: 3rem; /* Reserve space for badges */
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
        gap: 0.75rem;
        max-width: 100%;
        box-sizing: border-box;
      }
      
      .trust-signal {
        min-height: 2.5rem;
        min-width: 0;
        max-width: 100%;
        display: flex;
        align-items: center;
        box-sizing: border-box;
        overflow: hidden;
        text-overflow: ellipsis;
      }
      
      /* Gradient text stability */
      .gradient-text {
        color: hsl(203 89% 53%); /* Fallback color to prevent transparent text flash */
        font-weight: inherit;
      }
      
      /* Animation containment */
      .animate-slide-up {
        will-change: auto;
      }
    </style>
    
    <!-- Performance-Optimized Google Analytics 4 -->
    <script is:inline>
      // Initialize dataLayer and gtag function immediately
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      window.gtag = gtag;
      gtag('js', new Date());
      
      // Load GA4 script lazily for better performance
      function loadGoogleAnalytics() {
        if (window.gtag._loaded) return;
        window.gtag._loaded = true;
        
        const script = document.createElement('script');
        script.async = true;
        script.src = 'https://www.googletagmanager.com/gtag/js?id=G-117M1HYTL2';
        script.onload = function() {
          // Configure GA4 after script loads
          gtag('config', 'G-117M1HYTL2', {
            allow_enhanced_conversions: true,
            send_page_view: true,
            anonymize_ip: true,
            cookie_expires: 60 * 60 * 24 * 28, // 28 days
            custom_map: { dimension1: 'supplement_site' }
          });
          
          // Track initial page view
          gtag('event', 'page_view', {
            page_title: document.title,
            page_location: window.location.href,
            content_group1: 'NBS Supplements'
          });
        };
        document.head.appendChild(script);
      }
      
      // Load analytics on user interaction or after delay
      let analyticsLoaded = false;
      function initAnalytics() {
        if (analyticsLoaded) return;
        analyticsLoaded = true;
        
        if ('requestIdleCallback' in window) {
          requestIdleCallback(loadGoogleAnalytics, { timeout: 2000 });
        } else {
          setTimeout(loadGoogleAnalytics, 1000);
        }
      }
      
      // Load on first user interaction
      const interactionEvents = ['mousedown', 'mousemove', 'keypress', 'scroll', 'touchstart', 'click'];
      const loadOnInteraction = function() {
        initAnalytics();
        interactionEvents.forEach(event => {
          document.removeEventListener(event, loadOnInteraction, { passive: true });
        });
      };
      
      interactionEvents.forEach(event => {
        document.addEventListener(event, loadOnInteraction, { passive: true });
      });
      
      // Fallback: load after 3 seconds if no interaction
      setTimeout(initAnalytics, 3000);
    </script>

    <!-- Load Analytics Modules - Deferred for performance -->
    <script>
      // Load analytics modules after page interaction or delay
      function loadAnalyticsModules() {
        if (window.analyticsModulesLoaded) return;
        window.analyticsModulesLoaded = true;
        
        const scripts = [
          '/scripts/blog-tracking.js',
          '/scripts/contact-tracking.js', 
          '/scripts/product-tracking.js'
        ];
        
        scripts.forEach((src, index) => {
          const script = document.createElement('script');
          script.src = src;
          script.async = true;
          script.defer = true;
          
          // Load scripts with slight delay to prevent blocking
          setTimeout(() => {
            document.head.appendChild(script);
          }, index * 100);
        });
      }
      
      // Load analytics modules on first user interaction
      const interactionEvents = ['mousedown', 'mousemove', 'keypress', 'scroll', 'touchstart'];
      const loadOnInteraction = function() {
        loadAnalyticsModules();
        interactionEvents.forEach(event => {
          document.removeEventListener(event, loadOnInteraction, { passive: true });
        });
      };
      
      interactionEvents.forEach(event => {
        document.addEventListener(event, loadOnInteraction, { passive: true });
      });
      
      // Fallback: load after 2 seconds if no interaction
      setTimeout(loadAnalyticsModules, 2000);
    </script>
    
    <!-- Optimized font loading for better performance -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="preload" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" as="style" onload="this.onload=null;this.rel='stylesheet'" />
    <noscript><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" /></noscript>
    
    <!-- Optimized font faces for CLS prevention -->
    <style>
      /* Exact Inter font metrics fallback */
      @font-face {
        font-family: 'Inter Fallback';
        src: local('system-ui'), local('-apple-system'), local('Segoe UI'), local('Arial');
        font-display: block;
        font-weight: 400;
        font-style: normal;
        size-adjust: 100.06%;
        ascent-override: 90.20%;
        descent-override: 22.48%;
        line-gap-override: 0%;
      }
      
      @font-face {
        font-family: 'Inter Fallback';
        src: local('system-ui'), local('-apple-system'), local('Segoe UI'), local('Arial');
        font-display: block;
        font-weight: 500;
        font-style: normal;
        size-adjust: 100.06%;
        ascent-override: 90.20%;
        descent-override: 22.48%;
        line-gap-override: 0%;
      }
      
      @font-face {
        font-family: 'Inter Fallback';
        src: local('system-ui'), local('-apple-system'), local('Segoe UI'), local('Arial');
        font-display: block;
        font-weight: 600;
        font-style: normal;
        size-adjust: 100.06%;
        ascent-override: 90.20%;
        descent-override: 22.48%;
        line-gap-override: 0%;
      }
      
      @font-face {
        font-family: 'Inter Fallback';
        src: local('system-ui'), local('-apple-system'), local('Segoe UI'), local('Arial');
        font-display: block;
        font-weight: 700;
        font-style: normal;
        size-adjust: 100.06%;
        ascent-override: 90.20%;
        descent-override: 22.48%;
        line-gap-override: 0%;
      }
    </style>
    
    <!-- Critical images are handled by Astro Image component optimization -->
    
    <!-- Strategic resource hints for performance -->
    <link rel="dns-prefetch" href="https://www.googletagmanager.com" />
    <link rel="dns-prefetch" href="https://www.google-analytics.com" />
    <link rel="dns-prefetch" href="https://gumroad.com" />
    
    <!-- Critical resource hints for faster loading -->
    <meta name="format-detection" content="telephone=no" />
    <meta name="theme-color" content="#2563eb" />
    <meta name="msapplication-TileColor" content="#2563eb" />
    
  </head>
  
  <body class={`bg-background font-sans antialiased ${bodyClass}`.trim()}>
    <div class="min-h-screen flex flex-col">
      <!-- Skip to main content link for accessibility -->
      <a 
        href="#main-content" 
        class="sr-only focus:not-sr-only focus:fixed focus:top-4 focus:left-4 z-50 bg-primary text-primary-foreground px-4 py-2 rounded-md font-medium"
      >
        Skip to main content
      </a>
      
      <!-- Header -->
      <Header />
      
      <!-- Main Content -->
      <main id="main-content" class="flex-1">
        <slot />
      </main>
      
      <!-- Footer -->
      <Footer />
    </div>
    
    <!-- Theme Toggle Script -->
    <script>
      // Theme toggle functionality
      function toggleTheme() {
        const currentTheme = localStorage.getItem('theme') || 'light';
        const newTheme = currentTheme === 'light' ? 'dark' : 'light';
        
        // Use requestAnimationFrame to ensure smooth visual updates
        requestAnimationFrame(() => {
          if (newTheme === 'light') {
            document.documentElement.classList.remove('dark');
          } else {
            document.documentElement.classList.add('dark');
          }
          
          localStorage.setItem('theme', newTheme);
          
          // Dispatch custom event with minimal payload
          window.dispatchEvent(new CustomEvent('theme-change', { 
            detail: { theme: newTheme },
            bubbles: false,
            cancelable: false
          }));
        });
      }
      
      // Make toggle function available globally
      window.toggleTheme = toggleTheme;
    </script>
    
    <!-- Core analytics functionality now handled by modular scripts -->

    <!-- Core Web Vitals Performance Monitoring - Deferred -->
    <script>
      // Load performance monitoring after critical resources
      function loadPerformanceMonitoring() {
        import('/src/lib/performance-monitor.js').then(({ performanceMonitor }) => {
          // Performance monitoring is automatically initialized
          
          // Report summary when user is about to leave
          window.addEventListener('beforeunload', () => {
            performanceMonitor.reportSummary();
          });
          
          // Report summary on visibility change (tab switching)  
          document.addEventListener('visibilitychange', () => {
            if (document.visibilityState === 'hidden') {
              performanceMonitor.reportSummary();
            }
          });
        }).catch(err => {
          console.warn('Performance monitoring failed to load:', err);
        });
      }
      
      // Load performance monitoring after page load
      if ('requestIdleCallback' in window) {
        requestIdleCallback(loadPerformanceMonitoring, { timeout: 3000 });
      } else {
        setTimeout(loadPerformanceMonitoring, 1500);
      }
    </script>
  </body>
</html>