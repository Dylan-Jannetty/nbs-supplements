---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

// Get all blog posts
const allPosts = await getCollection('blog');

// Filter out drafts and sort by publish date (newest first)
const publishedPosts = allPosts
  .filter(post => !post.data.draft)
  .sort((a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime());

// Get featured posts
const featuredPosts = publishedPosts.filter(post => post.data.featured);

// Get recent posts (excluding featured ones)
const recentPosts = publishedPosts.filter(post => !post.data.featured);

// Get all unique categories
const categories = [...new Set(publishedPosts.map(post => post.data.category))];

// SEO data
const seoData = {
  title: 'Blog | NBS Supplements - Natural Supplement Insights & Education',
  description: 'Expert insights on natural supplements, nutrition science, and fitness from pharmacist-formulated NBS Supplements. Learn about clean pre-workouts, natural ingredients, and supplement quality.',
  canonicalUrl: 'https://supplements-nbs.com/blog'
};
---

<BaseLayout 
  title={seoData.title}
  description={seoData.description}
  canonical={seoData.canonicalUrl}
>
  <!-- Blog Schema Markup -->
  <script type="application/ld+json" slot="head">
    {
      "@context": "https://schema.org",
      "@type": "Blog",
      "name": "NBS Supplements Blog",
      "description": "Expert insights on natural supplements, nutrition science, and fitness",
      "url": "https://supplements-nbs.com/blog",
      "publisher": {
        "@type": "Organization",
        "name": "NBS Supplements"
      },
      "blogPost": publishedPosts.slice(0, 5).map(post => ({
        "@type": "BlogPosting",
        "headline": post.data.title,
        "description": post.data.description,
        "author": {
          "@type": "Person",
          "name": post.data.author.name
        },
        "datePublished": post.data.publishDate.toISOString(),
        "url": `https://supplements-nbs.com/blog/${post.slug}`
      }))
    }
  </script>

  <!-- Breadcrumb Navigation -->
  <nav aria-label="Breadcrumb" class="container mx-auto px-4 sm:px-6 lg:px-8 py-4">
    <ol class="flex items-center space-x-2 text-sm text-muted-foreground">
      <li>
        <a href="/" class="hover:text-nbs-primary transition-colors duration-200">Home</a>
      </li>
      <li>/</li>
      <li class="text-foreground font-medium" aria-current="page">Blog</li>
    </ol>
  </nav>

  <main class="container mx-auto px-4 sm:px-6 lg:px-8 pb-16">
    <!-- Blog Header -->
    <header class="text-center mb-12 lg:mb-16">
      <h1 class="text-4xl lg:text-6xl font-bold text-foreground mb-6 leading-tight">
        Supplement <span class="text-nbs-primary">Science</span> & Insights
      </h1>
      <p class="text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed">
        Expert knowledge from our team of pharmacists. Learn about natural supplements, 
        nutrition science, and what makes truly clean formulations.
      </p>
    </header>

    <!-- Search and Filters -->
    <div class="mb-12">
      <div class="max-w-4xl mx-auto">
        <div class="flex flex-col md:flex-row gap-4 mb-8">
          <!-- Search Bar -->
          <div class="flex-1">
            <input 
              type="search" 
              placeholder="Search articles..." 
              id="blog-search"
              class="input w-full h-12 text-base"
            />
          </div>
          
          <!-- Category Filter -->
          <div class="md:w-64">
            <select 
              id="category-filter"
              class="w-full h-12 px-4 border border-border rounded-md focus:outline-none focus:ring-2 focus:ring-nbs-primary bg-background text-foreground"
            >
              <option value="">All Categories</option>
              {categories.map(category => (
                <option value={category}>{category}</option>
              ))}
            </select>
          </div>
        </div>
      </div>
    </div>

    {/* Featured Posts Section */}
    {featuredPosts.length > 0 && (
      <section class="mb-16">
        <div class="flex items-center justify-between mb-8">
          <h2 class="text-3xl font-bold text-foreground">Featured Articles</h2>
          <div class="h-px bg-gradient-to-r from-nbs-primary/20 to-transparent flex-1 ml-6"></div>
        </div>
        
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {featuredPosts.slice(0, 3).map(post => (
            <div class="card group hover:shadow-lg transition-all duration-300 hover:-translate-y-1">
              <div class="aspect-video rounded-t-lg overflow-hidden">
                <img 
                  src={post.data.featuredImage.src}
                  alt={post.data.featuredImage.alt}
                  class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                  loading="lazy"
                />
              </div>
              <div class="card-header">
                <div class="flex items-center gap-3 mb-3">
                  <span class="badge badge-secondary bg-nbs-primary/10 text-nbs-primary">
                    {post.data.category}
                  </span>
                  <div class="flex items-center gap-1 text-sm text-muted-foreground">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    <span>{post.data.readingTime || Math.ceil(post.data.excerpt.length / 200)} min read</span>
                  </div>
                </div>
                <h3 class="card-title text-xl group-hover:text-nbs-primary transition-colors duration-200 line-clamp-2">
                  <a href={`/blog/${post.slug}`} class="hover:underline">
                    {post.data.title}
                  </a>
                </h3>
                <p class="card-description text-base line-clamp-3">
                  {post.data.excerpt}
                </p>
              </div>
              <div class="card-content">
                <div class="flex items-center justify-between">
                  <div class="flex items-center gap-3">
                    <div class="w-8 h-8 rounded-full bg-gradient-to-br from-nbs-primary/20 to-nbs-secondary/20 flex items-center justify-center">
                      <svg class="w-4 h-4 text-nbs-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                      </svg>
                    </div>
                    <div>
                      <div class="text-sm font-medium text-foreground">{post.data.author.name}</div>
                      <div class="text-xs text-muted-foreground">{new Date(post.data.publishDate).toLocaleDateString()}</div>
                    </div>
                  </div>
                  <a href={`/blog/${post.slug}`} class="btn btn-ghost btn-sm text-nbs-primary hover:text-nbs-primary/80 flex items-center gap-1">
                    Read More
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
                    </svg>
                  </a>
                </div>
              </div>
            </div>
          ))}
        </div>
      </section>
    )}

    {/* Recent Articles Section */}
    <section class="mb-16">
      <div class="flex items-center justify-between mb-8">
        <h2 class="text-3xl font-bold text-foreground">
          {featuredPosts.length > 0 ? 'Recent Articles' : 'All Articles'}
        </h2>
        <div class="h-px bg-gradient-to-r from-nbs-primary/20 to-transparent flex-1 ml-6"></div>
      </div>

      <div id="articles-grid" class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {(featuredPosts.length > 0 ? recentPosts : publishedPosts).map(post => (
          <div class="card group hover:shadow-lg transition-all duration-300 hover:-translate-y-1" data-category={post.data.category}>
            <div class="aspect-video rounded-t-lg overflow-hidden">
              <img 
                src={post.data.featuredImage.src}
                alt={post.data.featuredImage.alt}
                class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                loading="lazy"
              />
            </div>
            <div class="card-header">
              <div class="flex items-center gap-3 mb-3">
                <span class="badge badge-secondary bg-nbs-primary/10 text-nbs-primary">
                  {post.data.category}
                </span>
                <div class="flex items-center gap-1 text-sm text-muted-foreground">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <span>{post.data.readingTime || Math.ceil(post.data.excerpt.length / 200)} min read</span>
                </div>
              </div>
              <h3 class="card-title text-xl group-hover:text-nbs-primary transition-colors duration-200 line-clamp-2">
                <a href={`/blog/${post.slug}`} class="hover:underline">
                  {post.data.title}
                </a>
              </h3>
              <p class="card-description text-base line-clamp-3">
                {post.data.excerpt}
              </p>
            </div>
            <div class="card-content">
              <div class="flex items-center justify-between">
                <div class="flex items-center gap-3">
                  <div class="w-8 h-8 rounded-full bg-gradient-to-br from-nbs-primary/20 to-nbs-secondary/20 flex items-center justify-center">
                    <svg class="w-4 h-4 text-nbs-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                    </svg>
                  </div>
                  <div>
                    <div class="text-sm font-medium text-foreground">{post.data.author.name}</div>
                    <div class="text-xs text-muted-foreground">{new Date(post.data.publishDate).toLocaleDateString()}</div>
                  </div>
                </div>
                <a href={`/blog/${post.slug}`} class="btn btn-ghost btn-sm text-nbs-primary hover:text-nbs-primary/80 flex items-center gap-1">
                  Read More
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
                  </svg>
                </a>
              </div>
            </div>
          </div>
        ))}
      </div>

      {/* No Results Message */}
      <div id="no-results" class="text-center py-12 hidden">
        <div class="text-6xl mb-4">🔍</div>
        <h3 class="text-2xl font-semibold text-foreground mb-2">No articles found</h3>
        <p class="text-muted-foreground">Try adjusting your search or filter criteria.</p>
      </div>
    </section>

    {/* Newsletter CTA */}
    <section class="bg-gradient-to-r from-nbs-primary/5 to-nbs-secondary/5 rounded-2xl p-8 lg:p-12 text-center">
      <h2 class="text-3xl lg:text-4xl font-bold text-foreground mb-4">
        Stay Updated with Latest Insights
      </h2>
      <p class="text-xl text-muted-foreground mb-8 max-w-2xl mx-auto">
        Get expert supplement knowledge, product updates, and exclusive content delivered to your inbox.
      </p>
      
      <div class="card max-w-md mx-auto">
        <div class="card-content pt-6">
          <form name="blog-newsletter" method="POST" data-netlify="true" class="space-y-4">
            <input type="hidden" name="form-name" value="blog-newsletter" />
            <input type="hidden" name="source" value="blog-index" />
            
            <div class="flex gap-3">
              <input
                type="email"
                name="email"
                required
                placeholder="Enter your email"
                class="input flex-1"
              />
              <button type="submit" class="btn btn-primary bg-nbs-primary hover:bg-nbs-primary/90">
                Subscribe
              </button>
            </div>
            
            <p class="text-xs text-muted-foreground">
              No spam, just science. Unsubscribe anytime.
            </p>
          </form>
        </div>
      </div>
    </section>
  </main>

  <!-- Search and Filter JavaScript -->
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const searchInput = document.getElementById('blog-search') as HTMLInputElement;
      const categoryFilter = document.getElementById('category-filter') as HTMLSelectElement;
      const articlesGrid = document.getElementById('articles-grid');
      const noResults = document.getElementById('no-results');
      
      if (!searchInput || !categoryFilter || !articlesGrid || !noResults) return;
      
      const articles = Array.from(articlesGrid.children) as HTMLElement[];
      
      function filterArticles() {
        const searchTerm = searchInput.value.toLowerCase();
        const selectedCategory = categoryFilter.value;
        
        let visibleCount = 0;
        
        articles.forEach(article => {
          const title = article.querySelector('h3')?.textContent?.toLowerCase() || '';
          const description = article.querySelector('p')?.textContent?.toLowerCase() || '';
          const category = article.getAttribute('data-category') || '';
          
          const matchesSearch = searchTerm === '' || 
            title.includes(searchTerm) || 
            description.includes(searchTerm);
          
          const matchesCategory = selectedCategory === '' || category === selectedCategory;
          
          if (matchesSearch && matchesCategory) {
            article.style.display = 'block';
            visibleCount++;
          } else {
            article.style.display = 'none';
          }
        });
        
        // Show/hide no results message
        if (visibleCount === 0) {
          articlesGrid.style.display = 'none';
          noResults.classList.remove('hidden');
        } else {
          articlesGrid.style.display = 'grid';
          noResults.classList.add('hidden');
        }
      }
      
      // Add event listeners
      searchInput.addEventListener('input', filterArticles);
      categoryFilter.addEventListener('change', filterArticles);

      // Track search usage with enhanced function
      let searchTimeout;
      searchInput.addEventListener('input', function() {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
          if (this.value.length > 2) {
            if (typeof window.trackBlogSearch === 'function') {
              window.trackBlogSearch(this.value);
            } else if (typeof window.trackBlogEngagement === 'function') {
              window.trackBlogEngagement('search', `Search: ${this.value}`);
            }
          }
        }, 1000);
      });

      // Track category filter usage with enhanced function
      categoryFilter.addEventListener('change', function() {
        if (this.value) {
          if (typeof window.trackBlogFilter === 'function') {
            window.trackBlogFilter(this.value);
          } else if (typeof window.trackBlogEngagement === 'function') {
            window.trackBlogEngagement('filter', `Category: ${this.value}`);
          }
        }
      });
    });

    // Track article clicks with enhanced function
    document.addEventListener('click', function(e) {
      const articleLink = e.target.closest('a[href^="/blog/"]');
      if (articleLink && !articleLink.href.endsWith('/blog/')) {
        const articleTitle = articleLink.closest('.card')?.querySelector('h3')?.textContent?.trim() || 'Unknown Article';
        const isFeatured = articleLink.closest('.card')?.closest('section')?.querySelector('h2')?.textContent?.includes('Featured');
        const clickLocation = isFeatured ? 'featured_section' : 'recent_section';
        
        // Use enhanced tracking function if available
        if (typeof window.trackArticleClick === 'function') {
          window.trackArticleClick(articleTitle, clickLocation);
        } else if (typeof window.trackBlogEngagement === 'function') {
          window.trackBlogEngagement('article_click', articleTitle);
        }

        // Direct GA4 tracking as fallback
        if (typeof gtag !== 'undefined') {
          gtag('event', 'blog_article_click', {
            content_type: 'article_preview',
            content_id: articleTitle,
            click_location: clickLocation,
            engagement_time_msec: Date.now() - performance.timeOrigin
          });
        }
      }
    });
  </script>
</BaseLayout>